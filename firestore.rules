rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Messages collection rules
    match /messages/{messageId} {
      allow read: if isAuthenticated() &&
        (resource.data.sender == request.auth.uid || 
         get(/databases/$(database)/documents/conversations/$(resource.data.conversationId)).data.userId == request.auth.uid);
      allow create: if isAuthenticated() &&
        request.resource.data.sender == request.auth.uid;
      allow delete: if isAuthenticated() &&
        (resource.data.sender == request.auth.uid || 
         get(/databases/$(database)/documents/conversations/$(resource.data.conversationId)).data.userId == request.auth.uid);
    }
    
    // Conversations collection rules
    match /conversations/{conversationId} {
      allow read, write: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
    }
    
    // User profiles collection rules
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Allow users to read task data
    match /tasks/{taskId} {
      allow read: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
    }
    
    // Add rules for todos collection
    match /todos/{todoId} {
      // Allow read/write operations for authenticated users who own the todo
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth != null && 
                                  resource.data.userId == request.auth.uid;
    }
  }
} 